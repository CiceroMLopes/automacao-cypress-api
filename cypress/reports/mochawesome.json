{
  "stats": {
    "suites": 2,
    "tests": 7,
    "passes": 2,
    "pending": 0,
    "failures": 5,
    "start": "2025-08-15T02:01:05.098Z",
    "end": "2025-08-15T02:01:08.088Z",
    "duration": 2990,
    "testsRegistered": 7,
    "passPercent": 28.57142857142857,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "df3025a0-ca5b-4cb7-9611-3369cf0f07d3",
      "title": "",
      "fullFile": "cypress\\e2e\\users.cy.js",
      "file": "cypress\\e2e\\users.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "43aebfb4-6c9a-4213-8819-43b943da8499",
          "title": "ServeRest - Autenticação e CRUD de Usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve falhar login com credenciais inválidas (401)",
              "fullTitle": "ServeRest - Autenticação e CRUD de Usuários deve falhar login com credenciais inválidas (401)",
              "timedOut": null,
              "duration": 1221,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.apiRequest({\n  method: 'POST',\n  url: '/login',\n  body: {\n    email: 'invalido@mail.com',\n    password: 'errada'\n  }\n}).then(response => {\n  expect(response.status).to.eq(401);\n});",
              "err": {},
              "uuid": "2e50a7d5-fd50-446e-b4f1-6b38cb5c46c8",
              "parentUUID": "43aebfb4-6c9a-4213-8819-43b943da8499",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve listar usuários (GET /usuarios)",
              "fullTitle": "ServeRest - Autenticação e CRUD de Usuários deve listar usuários (GET /usuarios)",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.apiRequest({\n  method: 'GET',\n  url: '/usuarios'\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('quantidade');\n  expect(response.body).to.have.property('usuarios').that.is.an('array');\n});",
              "err": {},
              "uuid": "41e4615a-32c0-47ac-8257-32691e91b80b",
              "parentUUID": "43aebfb4-6c9a-4213-8819-43b943da8499",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "47e2ec67-5ddb-41f6-b072-6ac1094968fc",
              "title": "CRUD de usuários autenticado",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve criar usuário (POST /usuarios)",
                  "fullTitle": "ServeRest - Autenticação e CRUD de Usuários CRUD de usuários autenticado deve criar usuário (POST /usuarios)",
                  "timedOut": null,
                  "duration": 316,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "createdEmail = uniqueEmail();\ncy.get('@token').then(token => {\n  cy.apiRequest({\n    method: 'POST',\n    url: '/usuarios',\n    headers: {\n      authorization: token\n    },\n    body: {\n      nome: 'Usuário Teste',\n      email: createdEmail,\n      password: '123456',\n      administrador: 'true'\n    }\n  }).then(response => {\n    expect(response.status).to.be.oneOf([201, 200]);\n    expect(response.body).to.have.property('_id');\n    createdUserId = response.body._id;\n  });\n});",
                  "err": {
                    "message": "CypressError: `cy.get()` could not find a registered alias for: `@token`.\nYou have not aliased anything yet.",
                    "estack": "CypressError: `cy.get()` could not find a registered alias for: `@token`.\nYou have not aliased anything yet.\n    at $Cy.aliasNotFoundFor (https://serverest.dev/__cypress/runner/cypress_runner.js:132315:66)\n    at $Cy.getAlias (https://serverest.dev/__cypress/runner/cypress_runner.js:132258:12)\n    at <unknown> (https://serverest.dev/__cypress/runner/cypress_runner.js:131837:21)\n    at Object.subjectFn (https://serverest.dev/__cypress/runner/cypress_runner.js:143866:16)\n    at $Cy.verifyUpcomingAssertions (https://serverest.dev/__cypress/runner/cypress_runner.js:143205:31)\n    at onRetry (https://serverest.dev/__cypress/runner/cypress_runner.js:143857:15)\n    at retryQuery (https://serverest.dev/__cypress/runner/cypress_runner.js:143870:10)\n    at <unknown> (https://serverest.dev/__cypress/runner/cypress_runner.js:144023:17)\n    at tryCatcher (https://serverest.dev/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (https://serverest.dev/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (https://serverest.dev/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromiseCtx (https://serverest.dev/__cypress/runner/cypress_runner.js:1636:10)\n    at _drainQueueStep (https://serverest.dev/__cypress/runner/cypress_runner.js:2434:12)\n    at _drainQueue (https://serverest.dev/__cypress/runner/cypress_runner.js:2423:9)\n    at Async._drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2439:5)\n    at Async.drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2309:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://automacao-api-cypress/./cypress/e2e/users.cy.js:44:6)",
                    "diff": null
                  },
                  "uuid": "a0c82b23-45d8-4704-b796-437895894625",
                  "parentUUID": "47e2ec67-5ddb-41f6-b072-6ac1094968fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "deve obter usuário por id (GET /usuarios/{id})",
                  "fullTitle": "ServeRest - Autenticação e CRUD de Usuários CRUD de usuários autenticado deve obter usuário por id (GET /usuarios/{id})",
                  "timedOut": null,
                  "duration": 331,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(null).then(() => {\n  expect(createdUserId, 'id criado').to.be.a('string').and.to.have.length.greaterThan(0);\n});\ncy.apiRequest({\n  method: 'GET',\n  url: `/usuarios/${createdUserId}`\n}).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.property('email', createdEmail);\n});",
                  "err": {
                    "message": "AssertionError: id criado: expected undefined to be a string",
                    "estack": "AssertionError: id criado: expected undefined to be a string\n    at Context.eval (webpack://automacao-api-cypress/./cypress/e2e/users.cy.js:65:46)",
                    "diff": null
                  },
                  "uuid": "8bbc811a-3514-487a-967e-19236e5f1a2a",
                  "parentUUID": "47e2ec67-5ddb-41f6-b072-6ac1094968fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "deve atualizar usuário (PUT /usuarios/{id})",
                  "fullTitle": "ServeRest - Autenticação e CRUD de Usuários CRUD de usuários autenticado deve atualizar usuário (PUT /usuarios/{id})",
                  "timedOut": null,
                  "duration": 199,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const newName = 'Usuário Teste Atualizado';\ncy.get('@token').then(token => {\n  cy.apiRequest({\n    method: 'PUT',\n    url: `/usuarios/${createdUserId}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      nome: newName,\n      email: createdEmail,\n      password: '123456',\n      administrador: 'true'\n    }\n  }).then(response => {\n    expect(response.status).to.eq(200);\n  });\n});",
                  "err": {
                    "message": "CypressError: `cy.get()` could not find a registered alias for: `@token`.\nYou have not aliased anything yet.",
                    "estack": "CypressError: `cy.get()` could not find a registered alias for: `@token`.\nYou have not aliased anything yet.\n    at $Cy.aliasNotFoundFor (https://serverest.dev/__cypress/runner/cypress_runner.js:132315:66)\n    at $Cy.getAlias (https://serverest.dev/__cypress/runner/cypress_runner.js:132258:12)\n    at <unknown> (https://serverest.dev/__cypress/runner/cypress_runner.js:131837:21)\n    at Object.subjectFn (https://serverest.dev/__cypress/runner/cypress_runner.js:143866:16)\n    at $Cy.verifyUpcomingAssertions (https://serverest.dev/__cypress/runner/cypress_runner.js:143205:31)\n    at onRetry (https://serverest.dev/__cypress/runner/cypress_runner.js:143857:15)\n    at retryQuery (https://serverest.dev/__cypress/runner/cypress_runner.js:143870:10)\n    at <unknown> (https://serverest.dev/__cypress/runner/cypress_runner.js:144023:17)\n    at tryCatcher (https://serverest.dev/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (https://serverest.dev/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (https://serverest.dev/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromiseCtx (https://serverest.dev/__cypress/runner/cypress_runner.js:1636:10)\n    at _drainQueueStep (https://serverest.dev/__cypress/runner/cypress_runner.js:2434:12)\n    at _drainQueue (https://serverest.dev/__cypress/runner/cypress_runner.js:2423:9)\n    at Async._drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2439:5)\n    at Async.drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2309:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://automacao-api-cypress/./cypress/e2e/users.cy.js:75:6)",
                    "diff": null
                  },
                  "uuid": "fa0855bc-068e-4e3c-9d11-38a756eb01f6",
                  "parentUUID": "47e2ec67-5ddb-41f6-b072-6ac1094968fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "deve recusar criação com email duplicado (400)",
                  "fullTitle": "ServeRest - Autenticação e CRUD de Usuários CRUD de usuários autenticado deve recusar criação com email duplicado (400)",
                  "timedOut": null,
                  "duration": 271,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@token').then(token => {\n  cy.apiRequest({\n    method: 'POST',\n    url: '/usuarios',\n    headers: {\n      authorization: token\n    },\n    body: {\n      nome: 'Usuário Duplicado',\n      email: createdEmail,\n      password: '123456',\n      administrador: 'false'\n    }\n  }).then(response => {\n    expect(response.status).to.be.oneOf([400, 409]);\n  });\n});",
                  "err": {
                    "message": "CypressError: `cy.get()` could not find a registered alias for: `@token`.\nYou have not aliased anything yet.",
                    "estack": "CypressError: `cy.get()` could not find a registered alias for: `@token`.\nYou have not aliased anything yet.\n    at $Cy.aliasNotFoundFor (https://serverest.dev/__cypress/runner/cypress_runner.js:132315:66)\n    at $Cy.getAlias (https://serverest.dev/__cypress/runner/cypress_runner.js:132258:12)\n    at <unknown> (https://serverest.dev/__cypress/runner/cypress_runner.js:131837:21)\n    at Object.subjectFn (https://serverest.dev/__cypress/runner/cypress_runner.js:143866:16)\n    at $Cy.verifyUpcomingAssertions (https://serverest.dev/__cypress/runner/cypress_runner.js:143205:31)\n    at onRetry (https://serverest.dev/__cypress/runner/cypress_runner.js:143857:15)\n    at retryQuery (https://serverest.dev/__cypress/runner/cypress_runner.js:143870:10)\n    at <unknown> (https://serverest.dev/__cypress/runner/cypress_runner.js:144023:17)\n    at tryCatcher (https://serverest.dev/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (https://serverest.dev/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (https://serverest.dev/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromiseCtx (https://serverest.dev/__cypress/runner/cypress_runner.js:1636:10)\n    at _drainQueueStep (https://serverest.dev/__cypress/runner/cypress_runner.js:2434:12)\n    at _drainQueue (https://serverest.dev/__cypress/runner/cypress_runner.js:2423:9)\n    at Async._drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2439:5)\n    at Async.drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2309:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://automacao-api-cypress/./cypress/e2e/users.cy.js:93:6)",
                    "diff": null
                  },
                  "uuid": "8c115d23-6f92-40e9-90dc-37c8eab28ebd",
                  "parentUUID": "47e2ec67-5ddb-41f6-b072-6ac1094968fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "deve excluir usuário (DELETE /usuarios/{id})",
                  "fullTitle": "ServeRest - Autenticação e CRUD de Usuários CRUD de usuários autenticado deve excluir usuário (DELETE /usuarios/{id})",
                  "timedOut": null,
                  "duration": 203,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('@token').then(token => {\n  cy.apiRequest({\n    method: 'DELETE',\n    url: `/usuarios/${createdUserId}`,\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    expect(response.status).to.eq(200);\n  });\n});",
                  "err": {
                    "message": "CypressError: `cy.get()` could not find a registered alias for: `@token`.\nYou have not aliased anything yet.",
                    "estack": "CypressError: `cy.get()` could not find a registered alias for: `@token`.\nYou have not aliased anything yet.\n    at $Cy.aliasNotFoundFor (https://serverest.dev/__cypress/runner/cypress_runner.js:132315:66)\n    at $Cy.getAlias (https://serverest.dev/__cypress/runner/cypress_runner.js:132258:12)\n    at <unknown> (https://serverest.dev/__cypress/runner/cypress_runner.js:131837:21)\n    at Object.subjectFn (https://serverest.dev/__cypress/runner/cypress_runner.js:143866:16)\n    at $Cy.verifyUpcomingAssertions (https://serverest.dev/__cypress/runner/cypress_runner.js:143205:31)\n    at onRetry (https://serverest.dev/__cypress/runner/cypress_runner.js:143857:15)\n    at retryQuery (https://serverest.dev/__cypress/runner/cypress_runner.js:143870:10)\n    at <unknown> (https://serverest.dev/__cypress/runner/cypress_runner.js:144023:17)\n    at tryCatcher (https://serverest.dev/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (https://serverest.dev/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (https://serverest.dev/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromiseCtx (https://serverest.dev/__cypress/runner/cypress_runner.js:1636:10)\n    at _drainQueueStep (https://serverest.dev/__cypress/runner/cypress_runner.js:2434:12)\n    at _drainQueue (https://serverest.dev/__cypress/runner/cypress_runner.js:2423:9)\n    at Async._drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2439:5)\n    at Async.drainQueues (https://serverest.dev/__cypress/runner/cypress_runner.js:2309:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://automacao-api-cypress/./cypress/e2e/users.cy.js:111:6)",
                    "diff": null
                  },
                  "uuid": "b9883199-51c1-4ffe-a174-5f1ab8e881cf",
                  "parentUUID": "47e2ec67-5ddb-41f6-b072-6ac1094968fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "a0c82b23-45d8-4704-b796-437895894625",
                "8bbc811a-3514-487a-967e-19236e5f1a2a",
                "fa0855bc-068e-4e3c-9d11-38a756eb01f6",
                "8c115d23-6f92-40e9-90dc-37c8eab28ebd",
                "b9883199-51c1-4ffe-a174-5f1ab8e881cf"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1320,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "2e50a7d5-fd50-446e-b4f1-6b38cb5c46c8",
            "41e4615a-32c0-47ac-8257-32691e91b80b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1452,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}